version: 2
workflows:
  version: 2
  test:
    jobs:
      - contract_cw1155_base
      - contract_cw1155_metadata_onchain
      - contract_cw721_base
      - contract_cw721_expiration
      - contract_cw721_fixed_price
      - contract_cw721_receiver_tester
      - package_cw721
      - package_cw1155
      - lint
      - wasm-build
  deploy:
    jobs:
      - build_and_upload_contracts:
          filters:
            tags:
              only: /^v[0-9]+\.[0-9]+\.[0-9]+.*/
            branches:
              ignore: /.*/

jobs:
  contract_cw1155_base:
    docker:
      - image: rust:1.58.1
    working_directory: ~/project/contracts/cw1155-base
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version
      - restore_cache:
          keys:
            - cargocache-cw1155-base-rust:1.58.1-{{ checksum "~/project/Cargo.lock" }}
      - run:
          name: Unit Tests
          environment:
            RUST_BACKTRACE: 1
          command: cargo unit-test --locked
      - run:
          name: Build and run schema generator
          command: cargo schema --locked
      - run:
          name: Ensure checked-in schemas are up-to-date
          command: |
            CHANGES_IN_REPO=$(git status --porcelain)
            if [[ -n "$CHANGES_IN_REPO" ]]; then
              echo "Repository is dirty. Showing 'git status' and 'git --no-pager diff' for debugging now:"
              git status && git --no-pager diff
              exit 1
            fi
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target
          key: cargocache-cw1155-base-rust:1.58.1-{{ checksum "~/project/Cargo.lock" }}

  contract_cw1155_metadata_onchain:
    docker:
      - image: rust:1.58.1
    working_directory: ~/project/contracts/cw1155-metadata-onchain
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version
      - restore_cache:
          keys:
            - cargocache-cw1155-metadata-onchain-rust:1.58.1-{{ checksum "~/project/Cargo.lock" }}
      - run:
          name: Unit Tests
          environment:
            RUST_BACKTRACE: 1
          command: cargo unit-test --locked
      - run:
          name: Build and run schema generator
          command: cargo schema --locked
      - run:
          name: Ensure checked-in schemas are up-to-date
          command: |
            CHANGES_IN_REPO=$(git status --porcelain)
            if [[ -n "$CHANGES_IN_REPO" ]]; then
              echo "Repository is dirty. Showing 'git status' and 'git --no-pager diff' for debugging now:"
              git status && git --no-pager diff
              exit 1
            fi
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target
          key: cargocache-cw1155-metadata-onchain-rust:1.58.1-{{ checksum "~/project/Cargo.lock" }}

  contract_cw721_base:
    docker:
      - image: rust:1.81.0
    working_directory: ~/project/contracts/cw721-base
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version
      - restore_cache:
          keys:
            - cargocache-cw721-base-rust:1.81.0-{{ checksum "~/project/Cargo.lock" }}
      - run:
          name: Unit Tests
          environment:
            RUST_BACKTRACE: 1
          command: cargo unit-test --locked
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target
          key: cargocache-cw721-base-rust:1.81.0-{{ checksum "~/project/Cargo.lock" }}

  contract_cw721_expiration:
    docker:
      - image: rust:1.81.0
    working_directory: ~/project/contracts/cw721-expiration
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version
      - restore_cache:
          keys:
            - cargocache-cw721-expiration-rust:1.81.0-{{ checksum "~/project/Cargo.lock" }}
      - run:
          name: Unit Tests
          environment:
            RUST_BACKTRACE: 1
          command: cargo unit-test --locked
      - run:
          name: Build and run schema generator
          command: cargo schema --locked
      - run:
          name: Ensure checked-in schemas are up-to-date
          command: |
            CHANGES_IN_REPO=$(git status --porcelain | grep -v '/schema/raw/' || true)
            if [[ -n "$CHANGES_IN_REPO" ]]; then
              echo "Repository is dirty. Showing 'git status' and 'git --no-pager diff' for debugging now:"
              git status && git --no-pager diff
              exit 1
            fi
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target
          key: cargocache-cw721-expiration-rust:1.81.0-{{ checksum "~/project/Cargo.lock" }}

  contract_cw721_fixed_price:
    docker:
      - image: rust:1.81.0
    working_directory: ~/project/contracts/cw721-fixed-price
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version
      - restore_cache:
          keys:
            - cargocache-cw721-fixed-price-rust:1.81.0-{{ checksum "~/project/Cargo.lock" }}
      - run:
          name: Unit Tests
          environment:
            RUST_BACKTRACE: 1
          command: cargo unit-test --locked
      - run:
          name: Build and run schema generator
          command: cargo schema --locked
      - run:
          name: Ensure checked-in schemas are up-to-date
          command: |
            CHANGES_IN_REPO=$(git status --porcelain | grep -v '/schema/raw/' || true)
            if [[ -n "$CHANGES_IN_REPO" ]]; then
              echo "Repository is dirty. Showing 'git status' and 'git --no-pager diff' for debugging now:"
              git status && git --no-pager diff
              exit 1
            fi
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target
          key: cargocache-cw721-fixed-price-rust:1.81.0-{{ checksum "~/project/Cargo.lock" }}

  contract_cw721_receiver_tester:
    docker:
      - image: rust:1.81.0
    working_directory: ~/project/contracts/cw721-receiver-tester
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version
      - restore_cache:
          keys:
            - cargocache-cw721-receiver-tester-rust:1.81.0-{{ checksum "~/project/Cargo.lock" }}
      - run:
          name: Unit Tests
          environment:
            RUST_BACKTRACE: 1
          command: cargo unit-test --locked
      - run:
          name: Build and run schema generator
          command: cargo schema --locked
      - run:
          name: Ensure checked-in schemas are up-to-date
          command: |
            CHANGES_IN_REPO=$(git status --porcelain | grep -v '/schema/raw/' || true)
            if [[ -n "$CHANGES_IN_REPO" ]]; then
              echo "Repository is dirty. Showing 'git status' and 'git --no-pager diff' for debugging now:"
              git status && git --no-pager diff
              exit 1
            fi
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target
          key: cargocache-cw721-receiver-tester-rust:1.81.0-{{ checksum "~/project/Cargo.lock" }}

  package_cw721:
    docker:
      - image: rust:1.81.0
    working_directory: ~/project/packages/cw721
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version; rustup target list --installed
      - restore_cache:
          keys:
            - cargocache-v2-cw721:1.64.0-{{ checksum "~/project/Cargo.lock" }}
      - run:
          name: Build library for native target
          command: cargo build --locked
      - run:
          name: Run unit tests
          command: cargo test --locked
      - run:
          name: Build and run schema generator
          command: cargo schema --locked
      - run:
          name: Ensure schemas are up-to-date
          command: |
            CHANGES_IN_REPO=$(git status --porcelain | grep -v '/schema/raw/' || true)
            if [[ -n "$CHANGES_IN_REPO" ]]; then
              echo "Repository is dirty. Showing 'git status' and 'git --no-pager diff' for debugging now:"
              git status && git --no-pager diff
              exit 1
            fi
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target
          key: cargocache-v2-cw721:1.64.0-{{ checksum "~/project/Cargo.lock" }}

  package_cw1155:
    docker:
      - image: rust:1.58.1
    working_directory: ~/project/packages/cw1155
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version; rustup target list --installed
      - restore_cache:
          keys:
            - cargocache-v2-cw1155:1.58.1-{{ checksum "~/project/Cargo.lock" }}
      - run:
          name: Build library for native target
          command: cargo build --locked
      - run:
          name: Run unit tests
          command: cargo test --locked
      - run:
          name: Build and run schema generator
          command: cargo schema --locked
      - run:
          name: Ensure schemas are up-to-date
          command: |
            CHANGES_IN_REPO=$(git status --porcelain)
            if [[ -n "$CHANGES_IN_REPO" ]]; then
              echo "Repository is dirty. Showing 'git status' and 'git --no-pager diff' for debugging now:"
              git status && git --no-pager diff
              exit 1
            fi
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target
          key: cargocache-v2-cw1155:1.58.1-{{ checksum "~/project/Cargo.lock" }}

  lint:
    docker:
      - image: rust:1.81.0
    steps:
      - checkout
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version; rustup target list --installed
      - restore_cache:
          keys:
            - cargocache-v2-lint-rust:1.81.0-{{ checksum "Cargo.lock" }}
      - run:
          name: Add rustfmt component
          command: rustup component add rustfmt
      - run:
          name: Add clippy component
          command: rustup component add clippy
      - run:
          name: Check formatting of workspace
          command: cargo fmt -- --check
      - run:
          name: Clippy linting on workspace
          command: cargo clippy --all-targets -- -D warnings
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target/debug/.fingerprint
            - target/debug/build
            - target/debug/deps
          key: cargocache-v2-lint-rust:1.81.0-{{ checksum "Cargo.lock" }}

  # This runs one time on the top level to ensure all contracts compile properly into wasm.
  # We don't run the wasm build per contract build, and then reuse a lot of the same dependencies, so this speeds up CI time
  # for all the other tests.
  # We also sanity-check the resultant wasm files.
  wasm-build:
    docker:
      - image: rust:1.81.0
    steps:
      - run:
          name: Install Docker client, Rust, Cargo, and Build Tools
          command: |
            apt-get update && apt-get install -y \
            docker.io \
            build-essential
      - run:
          name: Install Required Packages (curl, build tools)
          command: |
            apt-get update && apt-get install -y curl build-essential
      - setup_remote_docker
      - checkout
      - run:
          # We cannot mount local folders, see https://circleci.com/docs/2.0/building-docker-images/#mounting-folders
          name: Prepare volume with source code
          command: |
            # create a dummy container which will hold a volume with config
            docker create -v /code --name with_code alpine /bin/true
            # copy a config file into this volume
            docker cp Cargo.toml with_code:/code
            docker cp Cargo.lock with_code:/code
            # copy code into this volume
            docker cp ./contracts with_code:/code
            docker cp ./packages with_code:/code
      - run:
          name: Build and optimize contracts
          command: |
            docker run --volumes-from with_code cosmwasm/optimizer:0.16.1
            docker cp with_code:/code/artifacts ./artifacts
      - run:
          name: List artifacts and checksums
          command: |
            ls -l artifacts
            cat artifacts/checksums.txt
      - run:
          name: Install Rust and Cargo
          command: |
            export PATH="$HOME/.cargo/bin:$PATH"
            rustc --version
            cargo --version
            rustup show
      - run:
          name: Install cosmwasm-check
          # Uses --debug for compilation speed
          command: |
            export PATH="/usr/local/cargo/bin:$PATH"
            cargo install --debug --version 2.0.4 --locked cosmwasm-check
            cosmwasm-check --version
      - run:
          name: Check wasm contracts
          command: |
            export PATH="/usr/local/cargo/bin:$PATH"
            cosmwasm-check ./artifacts/*.wasm

  # This job roughly follows the instructions from https://circleci.com/blog/publishing-to-github-releases-via-circleci/
  build_and_upload_contracts:
    docker:
      - image: rust:1.81.0
    steps:
      - run:
          name: Install Dependencies
          command: |
            apt-get update && apt-get install -y curl git docker.io
      - setup_remote_docker
      - checkout
      - run:
          name: Build development contracts
          command: |
            docker run --rm -v "$(pwd)":/code \
              --mount type=volume,source="$(basename $(pwd))_cache",target=/target \
              --mount type=volume,source=registry_cache,target=/usr/local/cargo/registry \
              --platform linux/amd64 \
              cosmwasm/optimizer:0.16.1
      - run:
          name: Show data
          command: |
            ls -l artifacts
            cat artifacts/checksums.txt
      - run:
          name: Publish artifacts on GitHub
          command: |
            TAG="$CIRCLE_TAG"
            TITLE="$TAG"
            BODY="Attached there are some build artifacts generated at this tag. These are for development purposes only! Use crates.io for stable releases."
            curl -sL https://github.com/tcnksm/ghr/releases/download/v0.16.0/ghr_v0.16.0_linux_amd64.tar.gz | tar xz
            ./ghr_v0.16.0_linux_amd64/ghr -t "$GITHUB_TOKEN" \
              -u "$CIRCLE_PROJECT_USERNAME" -r "$CIRCLE_PROJECT_REPONAME" \
              -c "$CIRCLE_SHA1" \
              -n "$TITLE" -b "$BODY" \
              -delete \
              "$TAG" ./artifacts/
